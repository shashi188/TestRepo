{
	"name": "dataflowdemp",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empDataset",
						"type": "DatasetReference"
					},
					"name": "emplyeeData"
				},
				{
					"dataset": {
						"referenceName": "DeptDataset",
						"type": "DatasetReference"
					},
					"name": "deptData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "outdataetn",
						"type": "DatasetReference"
					},
					"name": "outputData"
				}
			],
			"transformations": [
				{
					"name": "empdeptjoin"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empno as string,",
				"          ename as string,",
				"          sal as string,",
				"          loc as string,",
				"          dept as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> emplyeeData",
				"source(output(",
				"          dno as string,",
				"          dname as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> deptData",
				"ModifyColumns1, deptData join(dept == dno,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> empdeptjoin",
				"emplyeeData derive(ename = upper(ename)) ~> ModifyColumns1",
				"empdeptjoin sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Name as string,",
				"          Category as string,",
				"          Status as string,",
				"          Error as string",
				"     ),",
				"     partitionFileNames:['empdeptdata'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> outputData"
			]
		}
	}
}